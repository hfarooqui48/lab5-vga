library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.std_logic_unsigned.all;
use IEEE.NUMERIC_STD.ALL;
entity pixel_pusher is
 Port (clk, en, vs, vid: in std_logic;
 pixel: in std_logic_vector(15 downto 0);
 vcount: in std_logic_vector (9 downto 0);
 hcount: in std_logic_vector(9 downto 0);
 R,B : out std_logic_vector(4 downto 0);
 G : out std_logic_vector(5 downto 0);
 addr : out std_logic_vector(11 downto 0));
end pixel_pusher;
architecture Behavioral of pixel_pusher is
signal adder: std_logic_vector (11 downto 0);
begin
addr <= adder;
process (clk)
begin
 if clk='1' and clk'event then
 if vs <= '0' then
 adder <= "000000000000";
 end if;
 if en='1' and vid='1' and unsigned(hcount) < 64 and unsigned(vcount) < 64 then
 adder <= std_logic_vector(adder) + 1;
 R <= pixel(7 downto 5) & "00";
 G <= pixel(4 downto 2) & "000";
 B <= pixel(1 downto 0) & "000";
 else
 R <= (others=>'0');
 G <= (others=>'0');
 B <= (others=>'0');
 end if;
 end if;
end process;
end Behavioral;
